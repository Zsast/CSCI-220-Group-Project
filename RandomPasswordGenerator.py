# CSCI-220 Group Project: Random Password Generator
# Authors: Daniel Roberts, Caleb (lastname), Griffin (lastname)
# (Due Date)
# Course: CSCI-220-03-04
# Instructor: Dr. Mia Wang
# We certify that this project is entirely of our own collaborative work, with work shared through GitHub.

# The purpose of this program is to generate a randomized password
# depending on parameters such as the password's length, whether
# they wish to include special characters, and more. The password
# will resemble something like that of one generated by Google or Edge's
# "suggested password" feature when creating new online accounts.

import random # import for random.choice() function

from time import * # import for sleep() function

def password_generator():
    
    password_length_input = int(input("How long would you like the password to be? "))

    print()

    specify_special_chars = input("Would you like to use special characters? Respond with either \"Yes\" or \"No\": ")

    print()

    ascii_list = [chr(i) for i in range(32, 127)] # list that contains all initially applicable ASCII characters

    alphanumerical_list = [] # List to contain only the letters and numbers within the range of ascii_list

    special_characters_list = ["!","?","$","@","#","_"] # List to contain all the special characters 

    password_chars = [] # List containing characters of final output

    # Populate alphanumerical_list with only letters and numbers from ascii_list
    for char in ascii_list:
        if char.isalnum():
            alphanumerical_list.append(char)
    
    for i in range(password_length_input):
        password_chars.append(random.choice(alphanumerical_list))
    if specify_special_chars == "Yes":
        password_chars.pop(-1)
        password_chars.append(random.choice(special_characters_list))
    
    password_result = ''.join(password_chars) # Join password_chars elements into a single string
    
    print(ascii_list)
    print()
    sleep(1)
    print(alphanumerical_list)
    print()
    sleep(1)
    print(password_result)
    print()
    
if __name__ == "__main__":
    password_generator()


